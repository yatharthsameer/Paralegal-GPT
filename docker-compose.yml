version: '3'
services:

  apps:
    image: opensemanticsearch/open-semantic-search
    build:
      context: .
    depends_on:
      - rabbitmq
      - solr
      - tika
      - hybrid-search-api
    volumes:
      - config_etl:/etc/opensemanticsearch
      - config_solr-php-ui:/etc/solr-php-ui
      # Django sqlite DB for settings and thesaurus
      - data_db:/var/opensemanticsearch/db
      # Ontologies uploaded to Django web app and thumbnails generated by ETL
      - data_media:/var/opensemanticsearch/media
      # Add local documents directory
      - ./Sample_ID_742:/var/opensemanticsearch/documents
    environment:
      - SOLR_PHP_UI_SOLR_HOST=solr
      - OPEN_SEMANTIC_ETL_MQ_BROKER=amqp://rabbitmq
      - OPEN_SEMANTIC_ETL_SOLR=http://solr:8983/solr/
      - OPEN_SEMANTIC_ETL_TIKA_SERVER=http://tika:9998
      - OPEN_SEMANTIC_ETL_TIKA_SERVER_FAKECACHE=http://tika-fakecache:9998
      - OPEN_SEMANTIC_ETL_SPACY_SERVER=http://spacy-services:8080
      - OPEN_SEMANTIC_ETL_NEO4J_HOST=neo4j
      - FLOWER_URL=http://flower:5555/flower
      - HYBRID_SEARCH_API=http://fusion:8000
    env_file:
      - neo4j.env
    ports:
      - "8080:80"

  etl:
    image: opensemanticsearch/open-semantic-etl
    build:
      context: src/open-semantic-etl/
    depends_on:
      - apps
      - rabbitmq
      - solr
      - tika
      - tika-fakecache
      - spacy-services
      - qdrant
    environment:
      - OPEN_SEMANTIC_ETL_MQ_BROKER=amqp://rabbitmq
      - OPEN_SEMANTIC_ETL_METADATA_SERVER=http://apps/search-apps/annotate/json
      - OPEN_SEMANTIC_ETL_SOLR=http://solr:8983/solr/
      - OPEN_SEMANTIC_ETL_TIKA_SERVER=http://tika:9998
      - OPEN_SEMANTIC_ETL_TIKA_SERVER_FAKECACHE=http://tika-fakecache:9998
      - OPEN_SEMANTIC_ETL_SPACY_SERVER=http://spacy-services:8080
      - OPEN_SEMANTIC_ETL_NEO4J_HOST=neo4j
      - OMP_THREAD_LIMIT=1
      - QDRANT_HOST=http://qdrant:6333
    env_file:
      - neo4j.env
    volumes:
      # read only (:ro), since workers don't need to change the config (is done only by admin or web ui in container apps)
      - config_etl:/etc/opensemanticsearch:ro
      # write access to persistent thumbnails dir
      - data_media:/var/opensemanticsearch/media
      - cache_tesseract:/var/cache/tesseract
      # Add local documents directory
      - ./Sample_ID_742:/var/opensemanticsearch/documents
      # Add embedding script
      - ./src/scripts/embed_documents.py:/usr/local/bin/embed_documents.py

  solr:
    build:
      context: .
      dockerfile: Dockerfile.solr
    platform: linux/arm64/v8
    volumes:
      - data_solr:/var/solr
    environment:
      - SOLR_LOCAL_HOST=0.0.0.0
    ports:
      - "8983:8983"

  tika:
    image: opensemanticsearch/tika-server
    build:
      context: src/tika-server.deb/
    environment:
      - OMP_THREAD_LIMIT=1
      - TIKA_CONFIG=/etc/tika/tika-config-cache.xml
    volumes:
      - cache_tesseract:/var/cache/tesseract

  tika-fakecache:
    image: opensemanticsearch/tika-server
    build:
      context: src/tika-server.deb/
    environment:
      - OMP_THREAD_LIMIT=1
      - TIKA_CONFIG=/etc/tika/tika-config-fakecache.xml
    volumes:
      - cache_tesseract:/var/cache/tesseract

  spacy-services:
    image: opensemanticsearch/spacy-services
    build:
      context: src/spacy-services.deb/src/spacy-services/

  rabbitmq:
    image: rabbitmq

  flower:
    image: mher/flower
    environment:
      - CELERY_BROKER_URL=amqp://rabbitmq
      - FLOWER_PORT=5555
      - FLOWER_URL_PREFIX=flower
    depends_on:
      - rabbitmq

  neo4j:
    image: neo4j
    restart: always
    env_file:
      - neo4j.env
    volumes:
      - data_neo4j:/data

  # Cron service to enable crawlers to start
  cron:
    image: opensemanticsearch/cron
    build:
      context: .
      dockerfile: Dockerfile-cron

  # Qdrant vector database
  qdrant:
    image: qdrant/qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage

  # Hybrid search API
  hybrid-search-api:
    build:
      context: ./src/scripts
      dockerfile: Dockerfile.api
    environment:
      - SOLR_HOST=http://solr:8983
      - SOLR_CORE=opensemanticsearch
      - QDRANT_HOST=http://qdrant:6333
      - QDRANT_COLLECTION=legal_chunks
      - MODEL_NAME=all-MiniLM-L6-v2
    ports:
      - "8000:8000"
    depends_on:
      - solr
      - qdrant

  # Fusion API for Solr and Qdrant
  fusion:
    build:
      context: ./src/fusion
    environment:
      - SOLR_URL=http://solr:8983/solr/opensemanticsearch
    ports:
      - "8001:8000"
    depends_on:
      - solr
      - qdrant

volumes:
  config_etl:
  config_solr-php-ui:
  data_db:
  data_media:
  data_neo4j:
  data_solr:
  cache_tesseract:
  qdrant_data:
